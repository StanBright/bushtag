<h1 class='section-title'><%= @animal.scientific_name %>, mate!</h1>
<div class='grid-x grid-margin-x'>
  <div class='cell small-12 large-5'>
    <img src="<%= @animal.image_url %>" title="<%= @animal.name_to_show %>" class="image-show"/>

    <br/>
    <div class='animal-info'>
      <table>
        <!--
        <thead>
          <tr>
            <th width="200">Property</th>
            <th>Info</th>
          </tr>
        </thead> -->
        <tbody>
          <tr>
            <td>Common Name:</td>
            <td><%= @animal.common_name %></td>
          </tr>
          <tr>
            <td>Scientific Name:</td>
            <td><%= @animal.scientific_name %></td>
          </tr>
          <tr>
            <td>Kingdom Name:</td>
            <td><%= @animal.kingdom_name %></td>
          </tr>
          <tr>
            <td>Family Name:</td>
            <td><%= @animal.family_name %></td>
          </tr>

          <tr>
            <td>Class Name:</td>
            <td><%= @animal.class_name %></td>
          </tr>
          <tr>
            <td>Source Dataset:</td>
            <td><%= @animal.dataset_name %></td>
          </tr>
        </tbody>
      </table>

      <a href="https://en.wikipedia.org/wiki/<%= @animal.scientific_name %>">
        Find it on wikipedia: <strong><%= @animal.scientific_name %></strong>
      </a>
    </div>
  </div>

  <div class='cell small-12 large-7'>
    <div id="map" style="width: 100%; height: 600px; background: grey" />
        <script  type="text/javascript" charset="UTF-8" >
        /**
       * Display clustered markers on a map
       *
       * Note that the maps clustering module http://js.api.here.com/v3/3.0/mapsjs-clustering.js
       * must be loaded to use the Clustering

       * @param {H.Map} map A HERE Map instance within the application
       * @param {Array.<Object>} data Raw data that contains coordinates
       */
      function startClustering(map, data) {
        // First we need to create an array of DataPoint objects,
        // for the ClusterProvider
        var dataPoints = data.map(function (item) {
          return new H.clustering.DataPoint(item.latitude, item.longitude);
        });

        // Create a clustering provider with custom options for clusterizing the input
        var clusteredDataProvider = new H.clustering.Provider(dataPoints, {
          clusteringOptions: {
            // Maximum radius of the neighbourhood
            eps: 32,
            // minimum weight of points required to form a cluster
            minWeight: 2
          }
        });

        // Create a layer tha will consume objects from our clustering provider
        var clusteringLayer = new H.map.layer.ObjectLayer(clusteredDataProvider);

        // To make objects from clustering provder visible,
        // we need to add our layer to the map
        map.addLayer(clusteringLayer);
      }


      /**
       * Boilerplate map initialization code starts below:
       */

      // Step 1: initialize communication with the platform
      var platform = new H.service.Platform({
        app_id: "<%= ENV['HERE_API_ID'] %>",
        app_code: "<%= ENV['HERE_API_CODE'] %>",
        useHTTPS: true,
        useCIT: true
      });
      var defaultLayers = platform.createDefaultLayers();

      // Step 2: initialize a map
      var map = new H.Map(document.getElementById('map'), defaultLayers.normal.map, {
        center: new H.geo.Point(-32.789, 145.790),
        zoom: 5
      });
      var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
      // Step 4: create the default UI component, for displaying bubbles
      var ui = H.ui.UI.createDefault(map, defaultLayers);
      var data = <%= @animals_json.html_safe %>;

      startClustering(map, data);
    </script>
  </div>
</div>
