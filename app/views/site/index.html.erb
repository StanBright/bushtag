<div class="text-center">
  <div class='focus-box-home'>
      <div id="map" style="width: 100%; height: 550px; background: grey; background-image: url('https://images.template.net/wp-content/uploads/2014/12/Australia-Day-Illustrations-KOALA.jpg')" />
        <script  type="text/javascript" charset="UTF-8" >
        /**
       * Display clustered markers on a map
       *
       * Note that the maps clustering module http://js.api.here.com/v3/3.0/mapsjs-clustering.js
       * must be loaded to use the Clustering

       * @param {H.Map} map A HERE Map instance within the application
       * @param {Array.<Object>} data Raw data that contains coordinates
       */
      function startClustering(map, ui, getBubbleContent, data) {
        // First we need to create an array of DataPoint objects,
        // for the ClusterProvider
        var dataPoints = data.map(function (item) {
          return new H.clustering.DataPoint(item.latitude, item.longitude, null, item);
        });

        // Create a clustering provider with custom options for clusterizing the input
        var clusteredDataProvider = new H.clustering.Provider(dataPoints, {
          clusteringOptions: {
            // Maximum radius of the neighbourhood
            eps: 32,
            // minimum weight of points required to form a cluster
            minWeight: 2
          }
        });

        clusteredDataProvider.addEventListener('tap', onMarkerClick);

        // Create a layer tha will consume objects from our clustering provider
        var clusteringLayer = new H.map.layer.ObjectLayer(clusteredDataProvider);

        // To make objects from clustering provder visible,
        // we need to add our layer to the map
        map.addLayer(clusteringLayer);
      }

      function getBubbleContent(data) {
        var item = data.a.data;
        return "<div class='bubble'><p>" + item.name + "</p><a href='" + item.path + "'><img style='height: 100px;' src='" + item.fullurl + "' /></a></div>";
      }

      function onMarkerClick(e) {
        // Get position of the "clicked" marker
        var position = e.target.getPosition(),
          // Get the data associated with that marker
          dataK = e.target.getData(),
          // Merge default template with the data and get HTML
          bubbleContent = getBubbleContent(dataK),
          bubble = onMarkerClick.bubble;

        // For all markers create only one bubble, if not created yet
        if (!bubble) {
          bubble = new H.ui.InfoBubble(position, {
            content: bubbleContent
          });
          ui.addBubble(bubble);
          // Cache the bubble object
          onMarkerClick.bubble = bubble;
        } else {
          // Reuse existing bubble object
          bubble.setPosition(position);
          bubble.setContent(bubbleContent);
          bubble.open();
        }

        // Move map's center to a clicked marker
        map.setCenter(position, true);
      }
      /**
       * Boilerplate map initialization code starts below:
       */

      // Step 1: initialize communication with the platform
      var platform = new H.service.Platform({
        app_id: "<%= ENV['HERE_API_ID'] %>",
        app_code: "<%= ENV['HERE_API_CODE'] %>",
        useHTTPS: true,
        useCIT: true
      });
      var defaultLayers = platform.createDefaultLayers();

      // Step 2: initialize a map
      var map = new H.Map(document.getElementById('map'), defaultLayers.normal.map, {
        center: new H.geo.Point(-32.789, 145.790),
        zoom: 5
      });

      // Step 3: make the map interactive
      // MapEvents enables the event system
      // Behavior implements default interactions for pan/zoom (also on mobile touch environments)
      var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));


      // Step 4: create the default UI component, for displaying bubbles
      var ui = H.ui.UI.createDefault(map, defaultLayers);
      var data = <%= @animals_json.html_safe %>;

      //startClustering(map, data);
      startClustering(map, ui, getBubbleContent, data);
    </script>
  </div>
</div>
